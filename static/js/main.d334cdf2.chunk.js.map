{"version":3,"sources":["images/IMG_0053.JPG","components/nav.js","components/Header.js","pages/home.js","utils/portfolioState.js","pages/portfolio.js","pages/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigator","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Header","props","Row","Col","page","Home","src","image","alt","projects","name","url","randProjects","indexArray","length","index","Math","floor","random","includes","push","projectArray","forEach","makeProjectArray","getProjects","portfolio","console","log","map","project","Card","contacts","App","fixed","Container","exact","path","component","Portfolio","Contacts","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d334cdf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_0053.b038b6e2.JPG\";","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\n\nfunction Navigator(){\n\nreturn(\n<Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n    <Navbar.Brand href=\"/\">Matthew Weston</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/projects\">Portfolio</Nav.Link>\n            <Nav.Link href=\"/contact\">Contact</Nav.Link>\n        </Nav>\n    </Navbar.Collapse>\n</Navbar>\n)}\nexport default Navigator","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Header(props){\n    return(\n        <Row>\n            <Col>\n                <h2>{props.page}</h2>\n            </Col>\n        </Row>\n    )\n}\nexport default Header;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport image from '../images/IMG_0053.JPG'\nimport Header from \"../components/Header\"\n\n\nconst Home= ()=>{\n    return(\n        <div>\n            <Header page=\"About Me\"/>\n            <Row>\n                <Col>\n                    <img id=\"image\" src={image} alt=\"Matthew Weston\"/>\n                    <p>My name is Matthew Weston. I'm currently studying Computer Science at the University of Central Florida.\n                    My interests in the field primarily revolve around security, bug-testing, and performance. However I'm\n                    also taking some time to learn web design as well. I'm proficient in C, knowledgeable in Java and am\n                    starting to learn HTML, CSS, and JavaScript.</p>\n                    <p>I began coding on a whim after a friend showed me what it was like and I'm happy to say I've greatly\n                    enjoyed it. All the time and effort feel worth it when I run any code and it works. And it always feels\n                    great to add to it or make it better.</p>\n                    <p>At the moment, I work as a Supplemental Instructor at UCF. I'm part of a school-led program intended to\n                    help other students excel in their classes. As an SI leader, I host review sessions, teach good study\n                    practices, and help fellow students understand course material including good coding practices</p>\n                    <ul>Known languages and skills\n                    <li>C</li>\n                        <li>Java</li>\n                        <li>Javascript</li>\n                        <li>Node.js</li>\n                        <li>jquery</li>\n                        <li>HTML</li>\n                        <li>CSS</li>\n                        <li>SQL</li>\n                    </ul>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default Home;","\nconst projects = [\n    {\n        name: \"Employee Directory\",\n        url:\"https://afternoon-everglades-46457.herokuapp.com/\"\n    },\n    {\n        name: \"Budget Tracker\",\n        url: \"https://damp-tor-20091.herokuapp.com/\"\n    },\n    {\n        name: \"Game Guru\",\n        url: \"https://gameguru.herokuapp.com/\"\n    },\n    {\n        name: \"Eat-da-Borger\",\n        url:\"https://eat-da-borger.herokuapp.com/\"\n    },\n    {\n        name: \"Exercise Tracker\",\n        url:\"https://fierce-cove-13177.herokuapp.com/\"\n    },\n    {\n        name: \"Password generator\",\n        url:\"submodules/passwordGen/password.html\"\n    },\n    {\n        name: \"Day planner\",\n        url:\"Schedule/Develop/index.html\"\n    },\n    {\n        name: \"Coding Quiz\",\n        url:\"codingQuiz/index.html\"\n    },\n    {\n        name: \"Weather Report\",\n        url:\"WeatherReport/index.html\"\n    },\n    {\n        name: \"Note Taker\",\n        url: \"https://ancient-shelf-45017.herokuapp.com/\"\n    },\n    {\n        name: \"Food Explorer\",\n        url: \"FoodExplorer/index.html\"\n    },\n]\n\nfunction makeProjectArray(indexArray){\n    let projectArray=[];\n    indexArray.forEach(index=>{\n        projectArray.push(projects[index]);\n    })\n    return projectArray;\n}\nfunction getProjects(){\n    let indexArray = [];\n    while (indexArray.length < 6){\n        const index = Math.floor(Math.random()*projects.length);\n        if (!indexArray.includes(index)){\n            indexArray.push(index);\n        }\n    }\n    return makeProjectArray(indexArray);\n}\nconst randProjects = getProjects();\n\nexport default randProjects;","import React from \"react\";\nimport Header from \"../components/Header\"\nimport randProjects from \"../utils/portfolioState\"\nimport Card from \"react-bootstrap/Card\"\n\nconst portfolio = ()=>{\n    const projects = randProjects;\n    console.log(projects)\n    return(\n        <div>\n            <Header page=\"projects\" />\n            <p>A random assortment of my repo</p>\n\n            {projects.map(project=>(\n                <Card className=\"text-center\">\n\n                    <a href={project.url}>{project.name}</a>\n                </Card>\n            ))}\n            <p className=\"text-center\">Additional projects can be found at <a href=\"https://github.com/mweston6288\">my Github</a></p>\n\n        </div>\n    )\n}\n\nexport default portfolio;","import React from \"react\";\nimport Header from \"../components/Header\"\n\nconst contacts = ()=>{\n    return(\n        <div>\n            <Header page=\"Contact Me\"/>\n            <ul>\n                <li>mweston6288@gmail.com</li>\n                <li>mweston6288@knights.ucf.edu</li>\n            </ul>\n        </div>\n    )\n}\nexport default contacts;","import React from 'react';\nimport \"./css/style.css\"\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/nav\"\nimport Home from \"./pages/home\"\nimport Portfolio from \"./pages/portfolio\"\nimport Container from \"react-bootstrap/Container\";\nimport Contacts from \"./pages/contact\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav fixed=\"top\"/>\n        <Container>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/projects\" component={Portfolio}/>\n          <Route exact path=\"/contact\" component={Contacts}/>\n        </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}